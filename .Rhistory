render(input = input, md_document(preserve_yaml = T, toc = T),
output_dir = dir, output_options=list(self_contained=T))
render(input = input, md_document(preserve_yaml = T, toc = T),
output_dir = dir, output_options=list(self_contained=T))
render(input = input, html_document(toc = TRUE),
output_dir = dir)
render(input = input, html_document(toc = TRUE),
output_dir = dir)
baseurl = servr:::jekyll_config('.', 'baseurl', '/')
baseurl
knitr::opts_knit$set(base.url = baseurl)
if (markdown == 'kramdown') {
knitr::render_jekyll()
} else knitr::render_markdown()
a <- c("2015-07-15-Mail_to_senateur.Rmd", "2015-07-15-Mail_to_senateur.md"")
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
d
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
a <- c("2015-07-15-Mail_to_senateur.Rmd", "2015-07-15-Mail_to_senateur.md"")
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
a <- c("2015-07-15-Mail_to_senateur.Rmd", "2015-07-15-Mail_to_senateur.md")
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
d
Sys.getenv('USER')
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
baseurl = servr:::jekyll_config('.', 'baseurl', '/assets/images/source/')
baseurl
a <- c("2015-07-15-Mail_to_senateur.Rmd", "2015-07-15-Mail_to_senateur.md")
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
d
baseurl
baseurl = servr:::jekyll_config('.', 'baseurl', '/assets/images/source/')
baseurl
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
getwd()
knitr::opts_chunk$set(fig.path = './assets/images/source/')
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
knitr::opts_chunk$set(fig.path = './assets/images/source/')
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
baseurl = servr:::jekyll_config('.', 'baseurl', '/')
baseurl
baseurl = servr:::jekyll_config('.', 'baseurl', '/blog_dev_mm/')
baseurl
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
knitr::opts_knit$set(base.url = "https://github.com/YvesCR/blog_dev_mm/assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "https://github.com/YvesCR/blog_dev_mm/")
knitr::opts_knit$set(base.dir = "./assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "https://github.com/YvesCR/blog_dev_mm/")
knitr::opts_knit$set(base.dir = "./assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "https://github.com/YvesCR/blog_dev_mm/")
knitr::opts_knit$set(base.dir = "./assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "https://github.com/YvesCR/blog_dev_mm/")
knitr::opts_knit$set(base.dir = "./assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "https://github.com/YvesCR/blog_dev_mm/")
knitr::opts_knit$set(base.dir = "./assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "./assets/images/source/")
knitr::opts_knit$set(base.dir = "https://github.com/YvesCR/blog_dev_mm/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "blog_dev_mm/assets/images/source/")
knitr::opts_knit$set(base.dir = "https://github.com/YvesCR/blog_dev_mm/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "blog_dev_mm/assets/images/source/")
knitr::opts_knit$set(base.dir = "https://github.com/YvesCR/blog_dev_mm/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "/blog_dev_mm/assets/images/source/")
knitr::opts_knit$set(base.dir = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "/blog_dev_mm/assets/images/source/")
knitr::opts_knit$set(base.dir = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "r2jekyll.R"))
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "/blog_dev_mm/assets/images/source/")
knitr::opts_knit$set(base.dir = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "/blog_dev_mm/assets/images/source/")
knitr::opts_knit$set(base.dir = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images/source/")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
#base.dir: (NULL) an absolute directory under which the plots are generated
#base.url: (NULL) the base url for HTML pages
knitr::opts_knit$set(base.url = "/blog_dev_mm/assets/images/source")
knitr::opts_knit$set(base.dir = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images/source")
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
knitr::opts_knit$set(base.url = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images")
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
knitr::opts_knit$set(base.url = "C:/Users/Yves/Documents/GitHub/blog_dev_mm")
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
knitr::opts_knit$set(base.dir = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/assets/images")
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path. Should be "C:/blog/gen"
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
path_site <- getwd()
path_site
path_site <- getwd(); dir_rmd <- "_source" ; dir_md = "_posts"; url_images = "assets/images/figures" ; out_ext = '.md'; in_ext='.rmd';recursive=FALSE
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext,
ignore.case=TRUE, recursive=recursive)
files
f <- files[1]
message(paste("Processing ", f, sep=''))
content <- readLines(file.path(path_site,dir_rmd,f))
frontMatter <- which(substr(content, 1, 3) == '---')
length(frontMatter) >= 2 & 1 %in% frontMatter
statusLine <- which(substr(content, 1, 7) == 'status:')
statusLine
publishedLine <- which(substr(content, 1, 10) == 'published:')
publishedLine
statusLine > frontMatter[1] & statusLine < frontMatter[2]
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
tolower(status)
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
status
content
nchar(content) == 0
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
content[statusLine]
file.path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
outFile
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
url_images
content
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
