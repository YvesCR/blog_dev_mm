## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
knitr::knit(input = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/_source_no_compile/2016-11-27-embedocputest.Rmd",
render_jekyll(highlight = c("prettify"))
)
knitr::knit(input = "C:/Users/Yves/Documents/GitHub/blog_dev_mm/_source_no_compile/2016-11-27-embedocputest.Rmd",
knitr::render_jekyll(highlight = c("prettify")))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"))
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ./blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ./blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
knitr::knit
tt <- readLines("../blog_dev_mm/hack/embedocputest/index.html")
art <- readLines("../blog_dev_mm/hack/embedocputest/index.html")
grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
art <- readLines("../blog_dev_mm/hack/embedocputest/index.html")
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
write.table(art, "../blog_dev_mm/hack/embedocputest/index.html")
cat(art, "../blog_dev_mm/hack/embedocputest/index.html", quote = F)
cat(art, file="../blog_dev_mm/hack/embedocputest/index.html", quote = F)
cat(art, file="../blog_dev_mm/hack/embedocputest/index.html", quote = F, fill=T)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../blog_dev_mm/")
art <- readLines("../blog_dev_mm/hack/embedocputest/index.html")
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file="../blog_dev_mm/hack/embedocputest/index.html", quote = F, fill=T)
get_rid_js <- function(x) {
art <- readLines(paste0("../blog_dev_mm/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../blog_dev_mm/", x, "/index.html"), quote = F, fill=T)
}
get_rid_js <- function(x) {
art <- readLines(paste0("../blog_dev_mm/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../blog_dev_mm/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package", "hack/Second_ropencorporate_pckg"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package", "hack/Second_ropencorporate_pckg"),
FUN = get_rid_js)
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package", "hack/Second_ropencorporate_pckg"),
FUN = get_rid_js)
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation\MapUKpartI"),
FUN = get_rid_js)
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI"),
FUN = get_rid_js)
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "data visualisation\RTNSE_blog"),
FUN = get_rid_js)
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "data visualisation/RTNSE_blog"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "data visualisation/RTNSE_blog"),
FUN = get_rid_js)
## build the blog:
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "data visualisation/RTNSE_blog"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "Statistic/RTNSE_blog"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "Statistic/RTNSE_blog"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "Statistic/RTNSE_blog"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "Statistic/RTNSE_blog"),
FUN = get_rid_js)
# check the path.
getwd()
# serve the blog subfolder:
servr::jekyll(input = "_source", output = "_posts", script = c("Makefile", "build.R"),
command = "jekyll build --destination ../yvescr.github.io/")
get_rid_js <- function(x) {
art <- readLines(paste0("../yvescr.github.io/", x, "/index.html"))
art <- art[!grepl('<script src="https://data-laborer.eu/assets/js/main.min.js"></script>', art)]
cat(art, file=paste0("../yvescr.github.io/", x, "/index.html"), quote = F, fill=T)
}
lapply(X = c("hack/embedocputest", "hack/Presentation_of_the_Ropencorporate_package",
"hack/Second_ropencorporate_pckg", "data visualisation/MapUKpartI", "Statistic/RTNSE_blog"),
FUN = get_rid_js)
